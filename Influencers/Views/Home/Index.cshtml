@model List<Influencers.BusinessLogic.ViewModels.ArticleViewModel>
@{
    ViewData["Title"] = "Home Page";

    int rank = 0;
    SortedDictionary<int, string> authors = new SortedDictionary<int, string>();
    
    Dictionary<string, string> mapVotesToEmoji = new Dictionary<string, string>()
    {
        {"-10", "🍆"},
        {"-5", "😡" },
        {"-2", "😱" },
        {"-1", "😢" },
        {"0", "🙏" },
        {"1", "👽" },
        {"2", "😜"},
        {"10", "😂"},
        {"50", "🚀" },
        {"69", "🔥"},
        {"100", "❤️"}

    };
}

<!DOCTYPE html>
<html>
<head>
    <style>
        .bootstrap-select .dropdown-menu {
            padding: 3px;
        }

            .bootstrap-select .dropdown-menu > li {
                display: inline-block;
                float: none;
            }

            .bootstrap-select .dropdown-menu > li {
                width: 50%;
            }

                .bootstrap-select .dropdown-menu > li > a {
                    font-size: 20px;
                }

        ol {
            list-style: none;
            padding: 0;
        }

        li {
            padding: 5px 10px;
            background-color: #EEEEEE;
            border: 1px solid #DDDDDD;
        }
    </style>
    <link rel="stylesheet" href="~/css/preview_posts.css">
    <link rel="stylesheet" href="~/css/buttons_posts.css">
</head>
<body>

    <div class="text-center">
        <h3 class="display-4">Welcome</h3>
    </div>

    <div class="row">
        <div class="leftcolumn">
            @foreach (var article in Model)
            {
                if (!authors.ContainsValue(@article.AuthorName))
                {
                    authors.Add(@article.Votes, @article.AuthorName);
                }

            <div class="card">
                <center><h3>@article.Title</h3></center>
                <h5>@article.Date.Value.ToShortDateString() @article.AuthorName</h5>
                <p>@article.Content.Substring(0, @article.Content.Length / 3)...</p>
                <div class="row">
                    <div class="col-sm-6">

                        <div class="scoring1">
                            <div class="form-group col-sm-30">
                                <select id="@article.ArticleId" onchange="f(@article.ArticleId)" class="form-control" asp-for="@article.Votes" style="font-size:100%;">
                                    <option value="0"></option>
                                    <option value="-10">🍆-10</option>
                                    <option value="-5">😡-5</option>
                                    <option value="-2">😱-2</option>
                                    <option value="-1">😢-1</option>
                                    <option value="0">🙏0</option>
                                    <option value="1">👽1</option>
                                    <option value="2">😜2</option>
                                    <option value="10">😂10</option>
                                    <option value="50">🚀50</option>
                                    <option value="69">🔥69</option>
                                    <option value="100">❤️100</option>
                                </select>
                            </div>
                        </div>
                        <div class="scoring2">
                            Score: @article.Votes
                        </div>

                    </div>

                    <div class="col-sm-0">
                        <a asp-action="ReadMore" asp-route-id="@article.ArticleId" asp-controller="Home" class="GFG" style="text-decoration : none">Read more</a>
                    </div>

                    <div class="col-sm-0">
                        <a asp-action="EditThis" asp-route-id="@article.ArticleId" asp-controller="Home" class="GFG" style="text-decoration : none">Edit this</a>

                    </div>
                </div>
                <div style="margin-left: 410px; ">
                    <div class="row">
                        <div id="$$@article.ArticleId" style="font-size:150%; display: flex;">

                            <script>
                                var iterable = new Map([['-10', '🍆'], ['-5', '😡'], ['-2', '😱'], ['-1', '😢'],
                                    ['0', '🙏'], ['1', '👽'], ['2', '😜'], ['10', '😂'],
                                                ['50', '🚀'], ['69', '🔥'], ['100', '❤️']]);

                                var votesOnArticle = []
                                //console.log(@article.ArticleId);
                                for (const entry of iterable) {
                                    if (document.cookie.split(';').some((item) => item.trim().startsWith(entry[0] + '@article.ArticleId='))) {
                                        votesOnArticle.push(entry[1]);
                                        var div = document.createElement("div");
                                        div.id = @article.ArticleId + entry[0]
                                        div.innerHTML = entry[1];
                                        div.addEventListener('click', function () {
                                           //console.log(entry[0] + @article.ArticleId + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;");
                                            document.cookie = entry[0] + @article.ArticleId + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
                                            undo(@article.ArticleId, entry[0]);
                                            //location.reload();
                                        });
                                        document.getElementById("$$@article.ArticleId").appendChild(div)
                                        //console.log([@article.ArticleId, entry[1]]);
                                    }   
                                }
                               // var choosenEmojis = votesOnArticle.join(' ');
   
                                //document.getElementById("$$@article.ArticleId").innerHTML = choosenEmojis;


                                /*
                                for (const entry of iterable) {
                                    console.log(entry[0]);

                                }
                                */
                            </script>
    
                        </div>
                    </div>
                </div>
                
                </div>

                }
                <br />
            </div>
        <div class="rightcolumn">
            <div class="card">
                <h3><a asp-action="Leaderboard" asp-controller="Home" class="board" style="text-decoration : none">Popular influencers &emsp; &emsp; &emsp;🏆</a></h3>
                <ol>
                    @for (int index = authors.Count - 1; index >= authors.Count - 3; --index)
                    {
                        ++@rank;
                        <li><h4>@rank.  @authors.ElementAt(index).Value    @authors.ElementAt(index).Key</h4></li>
                    }

                </ol>
            </div>
        </div>
    </div>

</body>
</html>

@section scripts{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/js/bootstrap-select.min.js"></script>
    <script src="~/lib/jquery-cookie/jquery.cookie.js"></script>
    <script>

        /*
        var cookies = $.cookie();
        for(var cookie in cookies) {
            $.removeCookie(cookie);
        }
  */

        function showEmoji(articleId) {
            for(var cookie in cookies) {
                console.log(cookie + '*');
            }
        }

        function f(articleId) {

            let x = $('#' + articleId).val();
           // var cookieVote = $.cookie();
           // console.log(map[x]);
            //console.log($.cookie(x));
            if (typeof $.cookie(x + articleId) === 'undefined') {
                $.cookie(x + articleId, 'orice');
                $.ajax({
                    type: "POST", // request type here
                    data: JSON.stringify({ articleId: articleId, votes: parseInt(x)}),
                    contentType: "application/json",
                    url: "http://localhost:57090/Home/sendvote",   // url here
                    success: function (data) { // callback here
                        location.reload();
                        //console.log(map[x]);
                        //$("#emo").load(" #emo");
                      //  document.getElementById('emo').innerHTML = map[x];
                        //console.log(data); // render what you want here
                    }
                });   
            } else {
                
            }
        };

        function undo(articleId, score) {           
                
            $.ajax({
                    type: "POST", // request type here
                    data: JSON.stringify({ articleId: articleId, votes: -parseInt(score) }),
                    contentType: "application/json",
                    url: "http://localhost:57090/Home/sendvote",   // url here
                    success: function (data) { // callback here
                        location.reload();
                        //console.log(map[x]);
                        //$("#emo").load(" #emo");
                      //  document.getElementById('emo').innerHTML = map[x];
                        //console.log(data); // render what you want here
                    }
                });   
        };

        
    </script>
}

